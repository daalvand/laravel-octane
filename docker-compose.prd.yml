version: "3.9"
networks:
  Octane:
    name: Octane
    driver: bridge
services:

  app:
    build:
      context: .
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    container_name: OctaneApp
    working_dir: /var/www/html
    ports:
      - ${NGINX_PORT:-8080}:8080
      - ${SWOOLE_PORT:-8081}:8081
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - Octane
    volumes:
      - ${VOLUMES_PATH:-../../volumes}/storage:/var/www/html/storage
      - ${VOLUMES_PATH:-../../volumes}/.env:/var/www/html/.env
      - ${VOLUMES_PATH:-../../volumes}/.env.testing:/var/www/html/.env.testing
      - ${VOLUMES_PATH:-../../volumes}/home:/home/www-data
    restart: unless-stopped
    depends_on:
      - redis
      - db

  redis:
    image: "redis:alpine"
    user: ${GID:-1000}:${UID:-1000}
    container_name: OctaneRedis
    restart: unless-stopped
    volumes:
      - ${VOLUMES_PATH:-../../volumes}/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ${VOLUMES_PATH:-../../volumes}/redis/data:/tmp/data
    networks:
      - Octane
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT:-6379}:6379"

  db:
    image: postgres:14
    user: ${GID:-1000}:${UID:-1000}
    container_name: OctaneDB
    ports:
      - ${DB_PORT:-5432}:5432
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-octane}
      POSTGRES_USER: ${DB_USERNAME:-octane}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-octane_secret}
      PGDATA: /tmp/postgres/data
    networks:
      - Octane
    volumes:
      - ${VOLUMES_PATH:-../../volumes}/postgres:/tmp/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres"]
      interval: 30s
      retries: 3